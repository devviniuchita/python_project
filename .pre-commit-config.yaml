# Pre-commit hooks configuration
# Install: pip install pre-commit && pre-commit install
# Run all hooks: pre-commit run --all-files
# Copyright (c) 2025 Python RAG Project Team
# SPDX-License-Identifier: MIT
#
# DEVELOPMENT STACK:
#   Language Server:  Pylance (VS Code LSP - semantic analysis, IntelliSense, type hints)
#   Code Formatter:   Black v24.1.1 (automated PEP 8 compliance)
#   Import Sorter:    isort v5.13.2 (black-compatible import organization)
#   Linter:           flake8 v7.0.0 (code quality with extended plugins)
#   Type Checker:     mypy v1.8.0 (static type analysis with type stubs)
#
# INTEGRATION: Pylance works with pre-commit hooks for real-time LSP feedback
#              while pre-commit ensures code passes automated quality gates

default_language_version:
  python: python3.12

fail_fast: false

repos:
  # Standard pre-commit hooks
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v4.5.0
    hooks:
      - id: trailing-whitespace
        name: Trim trailing whitespace
        entry: trailing-whitespace-fixer
        language: python
        types: [text]

      - id: end-of-file-fixer
        name: Fix end of file
        entry: end-of-file-fixer
        language: python
        types: [text]

      - id: check-yaml
        name: Check YAML syntax
        entry: check-yaml
        language: python
        types: [yaml]

      - id: check-toml
        name: Check TOML syntax
        entry: check-toml
        language: python
        types: [toml]

      - id: check-merge-conflict
        name: Check for merge conflicts
        entry: check-merge-conflict
        language: python
        types: [text]

  # Black code formatter
  - repo: https://github.com/psf/black
    rev: "24.1.1"
    hooks:
      - id: black
        name: Black code formatter
        language_version: python3.12
        exclude: ^(\.venv|venv)/

  # isort import sorter
  - repo: https://github.com/PyCQA/isort
    rev: 5.13.2
    hooks:
      - id: isort
        name: isort import sorter
        args: [--profile, black]
        exclude: ^(\.venv|venv)/

  # flake8 linter
  - repo: https://github.com/PyCQA/flake8
    rev: 7.0.0
    hooks:
      - id: flake8
        name: flake8 linter
        files: ^tests/unit/.*
        args:
          - --max-line-length=88
          - --extend-ignore=E203,W503
        exclude: ^(\.venv|venv)/
        additional_dependencies:
          - flake8-docstrings
          - flake8-bugbear

  # mypy type checker
  - repo: https://github.com/pre-commit/mirrors-mypy
    rev: v1.8.0
    hooks:
      - id: mypy
        name: mypy type checker
        files: ^(src/|tests/unit/).*
        args: [--ignore-missing-imports, --allow-untyped-decorators]
        additional_dependencies:
          - types-requests
          - types-PyYAML
          - typing_extensions
        exclude: ^(\.venv|venv|migrations|\.github)/

  # Custom local hook: Copyright headers validation
  - repo: local
    hooks:
      - id: copyright-headers
        name: Copyright headers validation
        entry: python scripts/add_copyright_headers.py --verify
        language: system
        types: [python, shell, yaml, markdown]
        pass_filenames: false
        require_serial: false
        description: Validate copyright headers in source files (via T-31)
