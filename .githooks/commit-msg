#!/bin/bash
# Copyright (c) 2025 Python RAG Project Team
# SPDX-License-Identifier: MIT

set -e

echo "üìù Checking commit message format..."
echo ""

COMMIT_MSG_FILE=$1
COMMIT_MSG=$(cat "$COMMIT_MSG_FILE")

# Skip merge commits
if echo "$COMMIT_MSG" | grep -q "^Merge"; then
    echo "‚úÖ Merge commit - skipping checks"
    exit 0
fi

# Check for DCO sign-off
if ! echo "$COMMIT_MSG" | grep -q "^Signed-off-by:"; then
    echo "‚ùå Commit must be signed-off"
    echo ""
    echo "Add sign-off with: git commit -s"
    echo ""
    echo "Or amend last commit: git commit --amend --signoff"
    echo ""
    echo "This ensures you agree to the Developer Certificate of Origin (DCO)"
    exit 1
fi

echo "‚úÖ DCO sign-off present"
echo ""

# Check Conventional Commits format
PATTERN="^(feat|fix|docs|style|refactor|perf|test|chore|revert)(\([a-z0-9_-]+\))?!?: .+"

if ! echo "$COMMIT_MSG" | head -1 | grep -qE "$PATTERN"; then
    echo "‚ùå Commit message doesn't follow Conventional Commits format"
    echo ""
    echo "Format: <type>(<scope>): <description>"
    echo ""
    echo "Types: feat, fix, docs, style, refactor, perf, test, chore, revert"
    echo ""
    echo "Examples:"
    echo "  feat(reranker): add adaptive threshold"
    echo "  fix(logging): correct JSON serialization"
    echo "  docs(readme): update installation guide"
    echo ""
    exit 1
fi

echo "‚úÖ Conventional Commits format valid"
echo ""

# Check for watermark removal (security check)
STAGED_FILES=$(git diff --cached --name-only)

for file in $STAGED_FILES; do
    if [ -f "$file" ]; then
        # Check if watermarks were removed
        if git diff --cached "$file" | grep -q "^-.*PRAG-2025-VU-v1.0"; then
            echo "‚ö†Ô∏è  WARNING: Project watermark removal detected in $file"
            echo ""
            echo "This is a protected copyright identifier."
            echo "If this is intentional, you can proceed, but please document why."
            echo ""
            read -p "Proceed anyway? (y/N) " -n 1 -r
            echo
            if [[ ! $REPLY =~ ^[Yy]$ ]]; then
                exit 1
            fi
        fi
    fi
done

echo "üéâ Commit message checks passed!"
